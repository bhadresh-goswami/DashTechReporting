@model DTRS.Models.SubmissionDetail

@{
    ViewBag.Title = "New Submission";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<form action="@Url.Action("Create")" method="post">

    <div class="card card-default">
        <div class="card-header">
            <h3 class="card-title">@ViewBag.Title</h3>

            @*<div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove"><i class="fas fa-times"></i></button>
                </div>*@
        </div>
        <!-- /.card-header -->
        <div class="card-body">
            <div class="row">
                @Html.AntiForgeryToken()

                <div class="col-md-8">
                    <div class="form-horizontal">
                        <input type="hidden" value="@ViewBag.aid" name="RefAssignedId" />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class="col-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.VendorName, htmlAttributes: new { @class = "control-label " })
                                    <div class="">
                                        @Html.EditorFor(model => model.VendorName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.VendorName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.VendorContactNumber, htmlAttributes: new { @class = "control-label " })
                                    <div class="">
                                        @Html.EditorFor(model => model.VendorContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.VendorContactNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="col-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.VendorEmailId, htmlAttributes: new { @class = "control-label " })
                                    <div class="">
                                        @Html.EditorFor(model => model.VendorEmailId, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.VendorEmailId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>

                        <div class="row">
                            <div class="col-6">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.VendorCompanyName, htmlAttributes: new { @class = "control-label " })
                                    <div class="">
                                        @Html.EditorFor(model => model.VendorCompanyName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.VendorCompanyName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="col-6">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label " })
                                    <div class="">
                                        @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-4">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PerHourRate, htmlAttributes: new { @class = "control-label " })
                                    <div class="">
                                        <input type="number" min="0" name="PerHourRate" class="form-control" required />
                                        @Html.ValidationMessageFor(model => model.PerHourRate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="col-4">


                                <div class="form-group">
                                    @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label " })
                                    <div class="">
                                        @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="col-4">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.JobLocation, htmlAttributes: new { @class = "control-label " })
                                    <div class="">
                                        @Html.EditorFor(model => model.JobLocation, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.JobLocation, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label " })
                            <div class="">
                                <textarea name="Remarks" class="form-control" required></textarea>

                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.RefAssignedId, "RefAssignedId", htmlAttributes: new { @class = "control-label " })
                                <div class="">
                                    @Html.DropDownList("RefAssignedId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RefAssignedId, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                        <div class="row">
                            <div class="col-6">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label " })
                                    <div class="">
                                        <input type="date" name="Date" class="form-control" required />

                                    </div>
                                </div>
                            </div>
                            <div class="col-6">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.FollowUpDate, htmlAttributes: new { @class = "control-label " })
                                    <div class="">

                                        <input type="date" name="FollowUpDate" class="form-control" required />
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*<div class="form-group">
                                @Html.LabelFor(model => model.FollowUpDate, htmlAttributes: new { @class = "control-label " })
                                <div class="">
                                    @Html.EditorFor(model => model.FollowUpDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FollowUpDate, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.StatusOfSubmission, htmlAttributes: new { @class = "control-label " })
                                <div class="">
                                    @Html.EditorFor(model => model.StatusOfSubmission, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.StatusOfSubmission, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            <div class="col-md-offset-2 ">
                                <input type="submit" value="Create" class="btn btn-default" />
                                <a href="@Url.Action("Index")" value="Create" class="btn btn-warning">Back</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>